Farmer John has built a new long barn, with N (2 <= N <= 100,000) stalls. The stalls are located along a straight line at positions x1 ... xN (0 <= xi <= 1,000,000,000).

His C (2 <= C <= N) cows don't like this barn layout and become aggressive towards each other once put into a stall. To prevent the cows from hurting each other, FJ wants to assign the cows to the stalls, such that the minimum distance between any two of them is as large as possible. What is the largest minimum distance?






import java.util.Arrays;
import java.util.Scanner;

public class AggressiveCows {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int t = scanner.nextInt();

        while (t-- > 0) {
            int N = scanner.nextInt();
            int C = scanner.nextInt();
            int[] stalls = new int[N];

            for (int i = 0; i < N; i++) {
                stalls[i] = scanner.nextInt();
            }

            Arrays.sort(stalls);

            int left = 1;
            int right = stalls[N - 1] - stalls[0];
            int result = 0;

            while (left <= right) {
                int mid = left + (right - left) / 2;
                if (canPlaceCows(stalls, C, mid)) {
                    result = mid;
                    left = mid + 1;
                } else {
                    right = mid - 1;
                }
            }

            System.out.println(result);
        }

        scanner.close();
    }

    private static boolean canPlaceCows(int[] stalls, int cows, int minDist) {
        int count = 1;
        int lastPlaced = stalls[0];

        for (int i = 1; i < stalls.length; i++) {
            if (stalls[i] - lastPlaced >= minDist) {
                count++;
                lastPlaced = stalls[i];
                if (count >= cows) {
                    return true;
                }
            }
        }

        return false;
    }
}

  
