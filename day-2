You are given a 0-indexed 2D integer matrix grid of size n * n with values in the range [1, n2]. Each integer appears exactly once except a which appears twice and b which is missing. The task is to find the repeating and missing numbers a and b.

Return a 0-indexed integer array ans of size 2 where ans[0] equals to a and ans[1] equals to b.



import java.util.HashMap;
class FindRepeatingAndMissing {
    public int[] findErrorNums(int[][] grid) {
        int n = grid.length;
        HashMap<Integer, Integer> countMap = new HashMap<>();
        int repeated = -1, missing = -1;

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                int num = grid[i][j];
                countMap.put(num, countMap.getOrDefault(num, 0) + 1);
            }
        }

        for (int i = 1; i <= n * n; i++) {
            if (!countMap.containsKey(i)) {
                missing = i;
            } else if (countMap.get(i) == 2) {
                repeated = i;
            }
        }

        return new int[]{repeated, missing};
    }
}
